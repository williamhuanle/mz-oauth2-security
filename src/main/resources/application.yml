spring:
  #database config
  datasource:
    url: jdbc:mysql://localhost:3306/mz_db_sample?useSSL=false
    username: root
    password: mzMysql123@
  #spring jpa config
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
  #spring security config
  security:
    oauth2:
      client:
        registration:
          google:
            clientId: 360175432143-0n8l0o51fa6lb3bnjer35nu7qb3mjlas.apps.googleusercontent.com
            clientSecret: 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
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile
#            facebook:
#              clientId: 121189305185277
#              clientSecret: 42ffe5aa7379e8326387e0fe16f34132
#              redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
#              scope:
#                - email
#                - public_profile
#            github:
#              clientId: d3e47fc2ddd966fa4352
#              clientSecret: 3bc0f6b8332f93076354c2a5bada2f5a05aea60d
#              redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
#              scope:
#                - user:email
#                - read:user
#          provider:
#            facebook:
#              authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
#              tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
#              userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)

mz-app:
  jwtAuth:
    tokenSecret: 5R0ztqkws.I7njY-2&hHz+1s8Ih==y<GY!3a5RYn+Dz'<upv$MYevaux5uJsi!4
    tokenExpirationMsec: 864000000
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:3000/oauth2/redirect
      - myandroidapp://oauth2/redirect
      - myiosapp://oauth2/redirect
  cors:
    allowedOrigins: http://localhost:3000,http://localhost:8080
