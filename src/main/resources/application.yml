spring:
  #database config
  datasource:
    url: jdbc:mysql://localhost:3306/mz_db_sample?useSSL=false
    username: root
    password: mzMysql123@
  #spring jpa config
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
  #spring security config
  security:
    oauth2:
      client:
        registration:
          google:
            clientId: 756446000190-i8c4qj0g1kv7k7ofaeu3jpsd1b066n3r.apps.googleusercontent.com
            clientSecret: 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
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile

mz-app:
  jwtAuth:
    tokenSecret: 5R0ztqkws.I7njY-2&hHz+1s8Ih==y<GY!3a5RYn+Dz'<upv$MYevaux5uJsi!4
    tokenExpirationMsec: 864000000
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:3000/oauth2/redirect
      - myandroidapp://oauth2/redirect
      - myiosapp://oauth2/redirect
  cors:
    allowedOrigins: http://localhost:8082,http://localhost:8080
